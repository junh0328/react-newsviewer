{"version":3,"sources":["components/Categories.js","components/NewsItem.js","components/NewsList.js","lib/usePromise.js","pages/NewsPage.js","App.js","index.js"],"names":["categories","name","text","CategoriesBlock","styled","div","Category","NavLink","props","active","css","Categories","map","c","activeClassName","exact","to","NewsItemBlock","NewsItem","article","title","description","url","urlToImage","className","href","target","rel","src","alt","NewsListBlock","NewsList","category","promiseCreator","deps","useState","loading","setLoading","response","setResponse","error","setError","useEffect","a","resolved","process","usePromise","query","axios","get","articles","data","NewsPage","match","params","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"wkCAIA,IAAMA,EAAa,CACjB,CACEC,KAAM,MACNC,KAAM,4BAER,CACED,KAAM,WACNC,KAAM,4BAER,CACED,KAAM,gBACNC,KAAM,wCAER,CACED,KAAM,SACNC,KAAM,gBAER,CACED,KAAM,UACNC,KAAM,gBAER,CACED,KAAM,SACNC,KAAM,sBAER,CACED,KAAM,aACNC,KAAM,iBAIJC,EAAkBC,IAAOC,IAAV,KAWfC,EAAWF,YAAOG,IAAPH,CAAH,KAoBV,SAACI,GAAD,OACAA,EAAMC,QACNC,YADA,QA+BWC,MAjBf,WACE,OACE,cAACR,EAAD,UACGH,EAAWY,KAAI,SAACC,GAAD,OACd,cAACP,EAAD,CAEEQ,gBAAgB,SAChBC,MAAkB,QAAXF,EAAEZ,KACTe,GAAe,QAAXH,EAAEZ,KAAiB,IAAnB,WAA6BY,EAAEZ,MAJrC,SAMGY,EAAEX,MALEW,EAAEZ,Y,0gBCjFjB,IAAMgB,EAAgBb,IAAOC,IAAV,KAsDJa,EAvBE,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACVC,EAAwCD,EAAxCC,MAAOC,EAAiCF,EAAjCE,YAAaC,EAAoBH,EAApBG,IAAKC,EAAeJ,EAAfI,WACjC,OACE,eAACN,EAAD,WACGM,GACC,qBAAKC,UAAU,YAAf,SACE,mBAAGC,KAAMH,EAAKI,OAAO,SAASC,IAAI,sBAAlC,SACE,qBAAKC,IAAKL,EAAYM,IAAI,kBAIhC,sBAAKL,UAAU,WAAf,UACE,6BACE,mBAAGC,KAAMH,EAAKI,OAAO,SAASC,IAAI,sBAAlC,SACGP,MAGL,4BAAIC,W,iUC9CZ,IAAMS,EAAgB1B,IAAOC,IAAV,KA6CJ0B,EAhCE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EClBpB,SAAoBC,EAAgBC,GAAM,MAGzBC,oBAAS,GAHgB,mBAGhDC,EAHgD,KAGvCC,EAHuC,OAIvBF,mBAAS,MAJc,mBAIhDG,EAJgD,KAItCC,EAJsC,OAK7BJ,mBAAS,MALoB,mBAKhDK,EALgD,KAKzCC,EALyC,KAsBvD,OAfAC,qBAAU,YACK,uCAAG,4BAAAC,EAAA,6DACdN,GAAW,GADG,kBAGWJ,IAHX,OAGNW,EAHM,OAIZL,EAAYK,GAJA,gDAMZH,EAAS,EAAD,IANI,QAQdJ,GAAW,GARG,yDAAH,oDAUbQ,KAECX,GAEI,CAACE,EAASE,EAAUE,GDHQM,EAAW,WAC5C,IAAMC,EAAqB,QAAbf,EAAqB,GAArB,oBAAuCA,GACrD,OAAOgB,IAAMC,IAAN,yDAC6CF,EAD7C,+CAGN,CAACf,IAN6B,mBAC1BI,EAD0B,KACjBE,EADiB,KACPE,EADO,KASjC,GAAIJ,EACF,OAAO,cAACN,EAAD,qCAGT,IAAKQ,EACH,OAAO,KAGT,GAAIE,EACF,OAAO,cAACV,EAAD,yCAlBwB,IAsBzBoB,EAAaZ,EAASa,KAAtBD,SACR,OACE,cAACpB,EAAD,UACGoB,EAAStC,KAAI,SAACO,GAAD,OACZ,cAAC,EAAD,CAA4BA,QAASA,GAAtBA,EAAQG,WE/BhB8B,EAXE,SAAC,GAAe,IAEzBpB,EAFwB,EAAZqB,MAEKC,OAAOtB,UAAY,MAC1C,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAUA,SAAUA,QCFXuB,EAJH,WACV,OAAO,cAAC,IAAD,CAAOC,KAAK,cAAcC,UAAWL,KCA9CM,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f501d6b2.chunk.js","sourcesContent":["import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nconst categories = [\n  {\n    name: 'all',\n    text: '전체보기',\n  },\n  {\n    name: 'business',\n    text: '비즈니스',\n  },\n  {\n    name: 'entertainment',\n    text: '엔터테인먼트',\n  },\n  {\n    name: 'health',\n    text: '건강',\n  },\n  {\n    name: 'science',\n    text: '과학',\n  },\n  {\n    name: 'sports',\n    text: '스포츠',\n  },\n  {\n    name: 'technology',\n    text: '과학',\n  },\n];\n\nconst CategoriesBlock = styled.div`\n  display: flex;\n  padding: 1rem;\n  width: 768px;\n  margin: 0 auto;\n  @media screen and (max-width: 768px) {\n    width: 100%;\n    overflow-x: auto;\n  }\n`;\n\nconst Category = styled(NavLink)`\n  font-size: 1.125rem;\n  cursor: pointer;\n  white-space: pre;\n  text-decoration: none;\n  color: inherit;\n  padding-bottom: 0.25rem\n\n  &:hover{\n    color: #495057\n  }\n  &.active {\n    font-weight: 600;\n    border-bottom: 2px solid #22b8cf;\n    color: #22b8cf;\n    &:hover{\n      color: #3bc9db;\n    }\n  }\n\n  ${(props) =>\n    props.active &&\n    css`\n      font-weight: 600;\n      border-bottom: 2px solid #22b8cf;\n      color: #22b8cf;\n      &:hover {\n        color: #3bc9db;\n      }\n    `}\n  & + & {\n    margin-left: 1rem;\n  }\n`;\n\nfunction Categories() {\n  return (\n    <CategoriesBlock>\n      {categories.map((c) => (\n        <Category\n          key={c.name}\n          activeClassName=\"active\"\n          exact={c.name === 'all'}\n          to={c.name === 'all' ? '/' : `/${c.name}`}\n        >\n          {c.text}\n        </Category>\n      ))}\n    </CategoriesBlock>\n  );\n}\n\nexport default Categories;\n","// NewsItem은 각 뉴스 정보를 보여 주는 컴포넌트입니다.\n\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst NewsItemBlock = styled.div`\n  display: flex;\n\n  .thumbnail {\n    margin-right: 1rem;\n    img {\n      display: block;\n      width: 160px;\n      height: 100px;\n      object-fit: cover;\n    }\n  }\n  .contents {\n    h2 {\n      margin: 0;\n      a {\n        color: black;\n      }\n    }\n    p {\n      margin: 0;\n      line-height: 1.5;\n      margin-top: 0.5rem;\n      white-space: normal;\n    }\n  }\n  & + & {\n    margin-top: 3rem;\n  }\n`;\n\nconst NewsItem = ({ article }) => {\n  const { title, description, url, urlToImage } = article;\n  return (\n    <NewsItemBlock>\n      {urlToImage && (\n        <div className=\"thumbnail\">\n          <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n            <img src={urlToImage} alt=\"thumbnail\" />\n          </a>\n        </div>\n      )}\n      <div className=\"contents\">\n        <h2>\n          <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n            {title}\n          </a>\n        </h2>\n        <p>{description}</p>\n      </div>\n    </NewsItemBlock>\n  );\n};\n\nexport default NewsItem;\n","// NewsLists는 API를 요청하고 뉴스 데이터가 들어 있는 배열을 컴포넌트 배열로 변환하여 렌더링해 주는 컴포넌트입니다.\n\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport NewsItem from './NewsItem';\nimport usePromise from '../lib/usePromise';\n\nconst NewsListBlock = styled.div`\n  box-sizing: border-box;\n  padding-bottom: 3rem;\n  width: 768px;\n  margin: 0 auto;\n  margin-top: 2rem;\n  @media screen and (max-width: 768px) {\n    width: 100%;\n    padding-left: 1rem;\n    padding-right: 1rem;\n  }\n`;\n\nconst NewsList = ({ category }) => {\n  const [loading, response, error] = usePromise(() => {\n    const query = category === 'all' ? '' : `&category=${category}`;\n    return axios.get(\n      `https://newsapi.org/v2/top-headlines?country=kr${query}&apiKey=0a8c4202385d4ec1bb93b7e277b3c51f`,\n    );\n  }, [category]);\n\n  // 대기 중일 때\n  if (loading) {\n    return <NewsListBlock>대기중 ...</NewsListBlock>;\n  }\n  // 아직 response 값이 설정되지 않았을 때\n  if (!response) {\n    return null;\n  }\n  // 에러가 발생했을 떄\n  if (error) {\n    return <NewsListBlock>에러 발생!</NewsListBlock>;\n  }\n\n  //response 값이 유효할 때\n  const { articles } = response.data;\n  return (\n    <NewsListBlock>\n      {articles.map((article) => (\n        <NewsItem key={article.url} article={article} />\n      ))}\n    </NewsListBlock>\n  );\n};\n\nexport default NewsList;\n","import { useState, useEffect } from 'react';\n\nexport default function usePromise(promiseCreator, deps) {\n  // 대기 중 /완료/실패에 대한 상태 관리\n\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const process = async () => {\n      setLoading(true);\n      try {\n        const resolved = await promiseCreator();\n        setResponse(resolved);\n      } catch (e) {\n        setError(e);\n      }\n      setLoading(false);\n    };\n    process();\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n\n  return [loading, response, error];\n}\n","import React from 'react';\nimport Categories from '../components/Categories';\nimport NewsList from '../components/NewsList';\n\nconst NewsPage = ({ match }) => {\n  // 카테고리가 선택되지 않았으면 기본값으로 all 사용\n  const category = match.params.category || 'all';\n  return (\n    <>\n      <Categories />\n      <NewsList category={category} />\n    </>\n  );\n};\n\nexport default NewsPage;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport NewsPage from './pages/NewsPage';\n\nconst App = () => {\n  return <Route path=\"/:category?\" component={NewsPage} />;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}